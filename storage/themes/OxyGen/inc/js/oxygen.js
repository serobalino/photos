/* filenamePattern: "$1.min.$2" */

/*! OxyGen oxygen.js
 *  Copyright  (c) 2015-2017 Bjarne Varoystrand - bjarne ○ kokensupport • com
 *  License: GPL
 *  @author Bjarne Varoystrand (@black_skorpio)
 *  @version 1.0.0
 *  @description Internal functions for OxyGen
 *  http://varoystrand.se | http://kokensupport.com
**/
(function(window, document, $, undefined) {
	// NOTE Define our "working space"
	window.OxyGen = {};

	// NOTE Initate our functions so we can run them on window.ready
	OxyGen.init = function() {
		OxyGen.cacheSelectors();
		OxyGen.loadingMSG();
		OxyGen.regularMenu();
		OxyGen.AlbumCount();
		OxyGen.isTouchDevice();
		OxyGen.disablePW();
		OxyGen.CoverScroll();
	};

	// NOTE Cache all our selectors
	OxyGen.cacheSelectors = function() {
		// NOTE Document Selectors
		OxyGen.Window				= $(window);
		OxyGen.Document				= $(document);
		OxyGen.Body					= $("body");
		OxyGen.HtmlBody				= $('html, body');

		// NOTE HTML Selectors
		OxyGen.InfiniteLoadingMSG	= $('#infinite_load_msg');
		OxyGen.LoadMSG				= $('.load_msg');
		OxyGen.Up					= $(".up");
		OxyGen.DonationWare			= $("#donationware");
		OxyGen.ShowHide				= $(".show_hide");
		OxyGen.ButtonPW				= $('input[type="password"]');
		OxyGen.ButtonSubmit			= $('.klogin_button');
		OxyGen.MenuDiv				= $(".menu");
		OxyGen.ButtonShow			= $('.show');
		OxyGen.Logo					= $("#logo");
		OxyGen.SiteName				= $(".sitename");
		OxyGen.Nav					= $('nav');
		OxyGen.RegNavLink			= $('nav li a');

		// Koken loading events
		OxyGen.infiniteLoading		= 'k-infinite-loading';
		OxyGen.InfiniteLoaded		= 'k-infinite-loaded';
		OxyGen.LightboxLoading		= 'koken:lightbox:loading';
		OxyGen.LightboxLoaded		= 'koken:lightbox:loaded';

		// NOTE CSS Class list selectors
		OxyGen.ClassTouch			= 'o-touch';
		OxyGen.ClassExpanded		= 'expanded';
		OxyGen.ClassShowToggled		= 'show-toggled';
		OxyGen.ClassRegNavMobile	= 'mobile';
		OxyGen.ClassRegNavMobOpen	= 'mobileOpen';
		OxyGen.ClassNavCurrent		= '.k-nav-current';
		OxyGen.ClassPageLoading		= 'Page--loading';
		OxyGen.ClassLightBoxLoading	= 'Lightbox--loading';
		OxyGen.CoverScrollLink		= '.cover_scroll_link';

		// NOTE Some utility selectors
		OxyGen.RegWindoWidth		= 769; // The window width where the regular mobile menu kicks in
	};

	// NOTE OxyGen Console message
	OxyGen.consoleMSG = function() {
		var i = 0;
		if (!i) {
			setTimeout(function () {
				console.log("%cWelcome!", "font: 3em sans-serif; color: orange; ");
				console.log("%cHello, and welcome to the OxyGen console. If this is your first time here, make yourself at home. (If not, disregard this message!)", "font: 1.5em sans-serif; color: white;");
				console.log("%cThank you for choosing OxyGen as your prefered theme for your portfolio website!", "font: 1.5em sans-serif; color: orange;");
				console.log("%cWhat you can find down here is what lies underneath Koken and OxyGen: its code. You can read, write, rewrite, and manipulate this code to make the web your own.", "font: 1.5em sans-serif; color: black;");
				console.log("%cYou can find out more about using the console from these sites:", "font: 1.25 sans-serif; color: black;");
				console.log("%c - Firefox: https://developer.mozilla.org/en-US/docs/Tools/Web_Console", "font: 1.25 sans-serif; color: black;");
				console.log("%c - Chrome: https://developers.google.com/web/tools/chrome-devtools/console/", "font: 1.25 sans-serif; color: black;");
				console.log("%c - Safari: https://developer.apple.com/library/content/documentation/AppleApplications/Conceptual/Safari_Developer_Guide/Console/Console.html", "font: 1.25 sans-serif; color: black;");
				console.log("%c - Or just use any search engine to look up 'developer console'", "font: 1.25 sans-serif; color: black;");
				console.log("%cFor help with learning to code, try https://www.codecademy.com/", "font: 1.25 sans-serif; color: black;");
				console.log("%c[This text generated by https://oxygen.kokensupport.com/]", "font: 1 sans-serif; color: grey;");
				console.log("%c       /\\__\\         /\\  \\         /\\__\\         /\\  \\         /\\__\\", "font: 1 sans-serif; color: orange;");
				console.log("%c      /:/  /        /::\\  \\       /:/  /        /::\\  \\       /::|  |", "font: 1 sans-serif; color: orange;");
				console.log("%c     /:/__/        /:/\\:\\  \\     /:/__/        /:/\\:\\  \\     /:|:|  |", "font: 1 sans-serif; color: orange;");
				console.log("%c    /::\\__\\____   /:/  \\:\\  \\   /::\\__\\____   /::\\~\\:\\  \\   /:/|:|  |__", "font: 1 sans-serif; color: orange;");
				console.log("%c   /:/\\:::::\\__\\ /:/__/ \\:\\__\\ /:/\\:::::\\__\\ /:/\\:\\ \\:\\__\\ /:/ |:| /\\__\\", "font: 1 sans-serif; color: orange;");
				console.log("%c   \\/_|:|~~|~    \\:\\  \\ /:/  / \\/_|:|~~|~    \\:\\~\\:\\ \\/__/ \\/__|:|/:/  /", "font: 1 sans-serif; color: orange;");
				console.log("%c      |:|  |      \\:\\  /:/  /     |:|  |      \\:\\ \\:\\__\\       |:/:/  /", "font: 1 sans-serif; color: orange;");
				console.log("%c      |:|  |       \\:\\/:/  /      |:|  |       \\:\\ \\/__/       |::/  /", "font: 1 sans-serif; color: orange;");
				console.log("%c      |:|  |        \\::/  /       |:|  |        \\:\\__\\         /:/  /", "font: 1 sans-serif; color: orange;");
				console.log("%c       \\|__|         \\/__/         \\|__|         \\/__/         \\/__/", "font: 1 sans-serif; color: orange;");
			}, 1);
			i = 1;
		};
	},OxyGen.consoleMSG();

	// NOTE Inifinite & Lightbox loading
	OxyGen.loadingMSG = function() {
		// Infinite loading starts
		var oxyGenLoading = function(e) {
			OxyGen.Body.addClass(OxyGen.ClassPageLoading), OxyGen.InfiniteLoadingMSG.show();
		}
		// Infinite loading done
		var oxyGenLoaded = function(e) {
			OxyGen.InfiniteLoadingMSG.hide(), OxyGen.Body.removeClass(OxyGen.ClassPageLoading);
		}
		// Lightbox loading
		var oxyGenLigthBoxLoading = function(e) {
			OxyGen.Body.addClass(OxyGen.ClassLightBoxLoading), OxyGen.LoadMSG.hide(), OxyGen.InfiniteLoadingMSG.show();
		}
		// Lightbox done loading
		var oxyGenLightBoxLoaded = function(e) {
			OxyGen.InfiniteLoadingMSG.hide(), OxyGen.LoadMSG.show(), OxyGen.Body.removeClass(OxyGen.ClassLightBoxLoading);
		}

		OxyGen.Window
		.on('k-infinite-loading', oxyGenLoading)
		.on('k-infinite-loaded', oxyGenLoaded)
		.on('koken:lightbox:loading', oxyGenLigthBoxLoading)
		.on('koken:lightbox:loaded', oxyGenLightBoxLoaded);
	};

	// NOTE The Regular menu
	OxyGen.regularMenu = function() {
		var WindowWidth = OxyGen.Window.width();
		var regularMenuToggle = function(e) {
			OxyGen.RegNavLink.not(OxyGen.ClassNavCurrent).toggle(0);
			OxyGen.ButtonShow.toggleClass(OxyGen.ClassShowToggled);
			return false
		};
		var regularMenuToggleMobile = function(e) {
			$('nav.mobile ul').toggle();
		};
		var regularMenuWidth = function(e) {
			if ( WindowWidth >= OxyGen.RegWindoWidth ) {
				var SiteNameWidth	= OxyGen.SiteName.outerWidth();
				var LogoWidth		= OxyGen.Logo.outerWidth();
				var MenuDivWidth	= OxyGen.MenuDiv.outerWidth() - OxyGen.ButtonShow.outerWidth();
				if ( OxyGen.Body.hasClass(OxyGen.ClassExpanded) ) {
					var menuWidth = ( OxyGen.SiteName.is(":visible") ) ? WindowWidth - SiteNameWidth : WindowWidth - LogoWidth;
				} else {
					var menuWidth = ( OxyGen.SiteName.is(":visible") ) ? WindowWidth - ( SiteNameWidth + MenuDivWidth ) : WindowWidth - ( LogoWidth + MenuDivWidth );
				};
				OxyGen.Nav.css('max-width', menuWidth);
			}
		};
		regularMenuWidth();
		OxyGen.Window.on("resize",regularMenuWidth);

		var responsiveNav = function(e) {
			if ( WindowWidth <= OxyGen.RegWindoWidth ) {
				OxyGen.Nav.addClass(OxyGen.ClassRegNavMobile);
				OxyGen.ButtonShow.addClass(OxyGen.ClassRegNavMobOpen);
			}
		};
		responsiveNav();
		// Toggle the regular menu
		OxyGen.ButtonShow.click(regularMenuToggle);
		// Do the same on smaller devices
		$('.mobileOpen').click(regularMenuToggleMobile);
	};

	OxyGen.AlbumCount = function() {
		var albumCount = $('.amount-check').html();
		if (albumCount === '1') {
			$('#slideshow_nav').hide();
		}
	};

	// NOTE Detect touch devices
	OxyGen.isTouchDevice = function() {
		if ( !!("ontouchstart" in window) || !!("onmsgesturechange" in window) ) {
			OxyGen.HtmlBody.addClass(OxyGen.ClassTouch)
		}
	};

	// NOTE Set the PW button to disabled until keyup
	OxyGen.disablePW = function() {
		var attrDisabled = function() {
			OxyGen.ButtonSubmit.attr('disabled', !$(this).val().length);
		};

		OxyGen.ButtonPW.keyup(attrDisabled).trigger('keyup');
	};

	OxyGen.CoverScroll = function() {
		var coverScrollEvent = function(event) {
			OxyGen.HtmlBody.animate({
				scrollTop: $(this.hash).offset().top - 0
			}, 1000, "swing")
			event.preventDefault();
		};
		OxyGen.Document.on('click', OxyGen.CoverScrollLink, coverScrollEvent);
	};

	$(document).on("ready",OxyGen.init);
})(window, document, jQuery);

/*! FitText.js 1.2
* Copyright 2011, Dave Rupert http://daverupert.com
* Released under the WTFPL license
* http://sam.zoy.org/wtfpl/
* Date: Thu May 05 14:23:00 2011 -0600
*/
(function( $ ){
	$.fn.fitText = function( kompressor, options ) {
		// Setup options
		var compressor = kompressor || 1,
		settings = $.extend({
			'minFontSize' : Number.NEGATIVE_INFINITY,
			'maxFontSize' : Number.POSITIVE_INFINITY
		}, options);
		return this.each(function(){
			// Store the object
			var $this = $(this);
			// Resizer() resizes items based on the object width divided by the compressor * 10
			var resizer = function () {
				$this.css('font-size', Math.max(Math.min($this.width() / (compressor*10), parseFloat(settings.maxFontSize)), parseFloat(settings.minFontSize)));
			};
			// Call once to set.
			resizer();
			// Call on resize. Opera debounces their resize by default.
			$(window).on('resize.fittext orientationchange.fittext', resizer);
		});
	};
})( jQuery );
